buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")
		 classpath("org.owasp:dependency-check-gradle:3.1.2")
	 	 
	}
}
plugins {
  id "pl.allegro.tech.build.axion-release" version "1.9.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
 
group = 'com.ce5systems.ocp'
version = '0.0.1-SNAPSHOT'
 
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Finchley.M9'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.flywaydb:flyway-core')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

sonarqube {
    properties {
        property 'sonar.projectName', 'helloworld'
		property "sonar.host.url", "http://sonarqube.apps.odos.360it.io"
        property "sonar.jacoco.reportPath", "build/jacoco/test.exec"
        property "sonar.java.source property", "1.8"
         
        }
}

 


tasks.withType(Checkstyle) {
     configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = true
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
        html.destination "$project.buildDir/outputs/checkstyle/checkstyle.html"
    }
}

 

tasks.withType(FindBugs) {

    effort = "max"
    reportLevel = "low"

    ignoreFailures = true
        reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')
        html.destination "$project.buildDir/outputs/findbugs/findbugs.html"
    }
}



 

tasks.withType(Pmd) {
     ruleSetFiles = files("${project.rootDir}/config/pmd/rules-pmd.xml")
    ignoreFailures = true
        reports {
        xml.enabled false
        html.enabled true
        html.destination "$project.buildDir/outputs/pmd/pmd.html"
    }
}


jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
        html.destination "$project.buildDir/outputs/jacoco/jacoco.html"
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}
 
jacocoTestReport.dependsOn jacocoTestCoverageVerification
test { finalizedBy jacocoTestReport }


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
